# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master
  tags:
    include:
      - v*
  paths:
    exclude:
    - README.md

pr:
  branches:
    include:
    - master
    - develop
  paths:
    exclude:
    - README.md

variables:
  - group: bintray
  - name: HOMEBREW_NO_ANALYTICS
    value: 1
  - name: HOMEBREW_NO_AUTO_UPDATE
    value: 1
  - name: HOMEBREW_NO_COLOR
    value: 1
  - name: HOMEBREW_NO_EMOJI
    value: 1

jobs:

- job: brew_test_bot

  displayName: "Create bottles"
  condition: or(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.Reason'], 'Manual'), eq(variables['Build.Reason'], 'Schedule'))

  pool:
    vmImage: macOS-10.14

  strategy:
    maxParallel: 8
    matrix:
       hal:
        package: hal

  steps:
    - bash: |
        sudo xcode-select --switch /Applications/Xcode_10.2.app/Contents/Developer
        brew update-reset /usr/local/Homebrew
        mkdir -p /usr/local/Homebrew/Library/Taps/emsec
        ln -s $PWD /usr/local/Homebrew/Library/Taps/emsec/homebrew-hal
      displayName: Setup environment

    - bash: |
        brew test-bot $(package) --root-url="https://dl.bintray.com/emsec/bottles-hal/" --verbose
      displayName: Brew test-bot $(package)

    - bash: |
        brew test-bot $(package) --ci-upload --root-url="https://dl.bintray.com/emsec/bottles-hal/" --bintray-org="emsec" --verbose
        export VERSION_STRING=${$(git describe --tag)#?}
        curl -u$(HOMEBREW_BINTRAY_USER):$(OMEBREW_BINTRAY_KEY) -H Content-Type:application/json -H Accept:application/json -X POST https://api.bintray.com/content/emsec/bottles-hal/hal/$VERSION_STRING/publish -d "{ \"discard\": \"false\" }"
      displayName: Brew test-bot --ci-upload $(package)
      env:
        HOMEBREW_BINTRAY_USER: $(HOMEBREW_BINTRAY_USER)
        HOMEBREW_BINTRAY_KEY: $(HOMEBREW_BINTRAY_KEY)
      condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))


- job: audit_style

  displayName: "Audit & Style"

  pool:
    vmImage: macOS-10.14

  strategy:
    maxParallel: 8
    matrix:
      hal:
        package: hal

  steps:
    - bash: |
        sudo xcode-select --switch /Applications/Xcode_10.2.app/Contents/Developer
        brew update-reset /usr/local/Homebrew
        mkdir -p /usr/local/Homebrew/Library/Taps/emsec
        ln -s $PWD /usr/local/Homebrew/Library/Taps/emsec/homebrew-hal
      displayName: Setup environment for $(package)

    - bash: |
        brew audit --strict --online $(package) --verbose
      displayName: Audit $(package)

    - bash: |
        brew style  $(package) --verbose
      displayName: Style $(package)


- job: build_test

  displayName: "Build & Test"
  condition: eq(variables['Build.Reason'], 'PullRequest')

  pool:
    vmImage: macOS-10.14

  strategy:
    maxParallel: 8
    matrix:
      hal:
        package: hal

  steps:
    - bash: |
        sudo xcode-select --switch /Applications/Xcode_10.2.app/Contents/Developer
        brew update-reset /usr/local/Homebrew
        mkdir -p /usr/local/Homebrew/Library/Taps/emsec
        ln -s $PWD /usr/local/Homebrew/Library/Taps/emsec/homebrew-hal
      displayName: Setup environment for $(package)

    - bash: |
        brew install $(package) --verbose
      displayName: Build $(package)
      timeoutInMinutes: 360

    - bash: |
        brew test $(package) --verbose
      displayName: Test $(package)
